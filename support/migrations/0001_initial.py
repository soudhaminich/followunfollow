# Generated by Django 2.2.6 on 2020-07-25 00:06

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import meta.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=2000)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('date_posted', models.DateTimeField(blank=True, null=True)),
                ('approved', models.CharField(choices=[('Y', 'Approved'), ('N', 'Pending')], default='Y', max_length=1)),
                ('slug', models.SlugField(blank=True, max_length=2000, null=True)),
                ('category', models.CharField(choices=[('P', 'Python'), ('D', 'Django'), ('S', 'SQL'), ('ORA', 'Oracle'), ('MYS', 'MYSQL'), ('JS', 'Javascript'), ('VUE', 'VueJS'), ('RCT', 'ReactJS'), ('HTCSS', 'HTML/CSS'), ('O', 'Other')], default='P', max_length=50)),
                ('video', models.CharField(default='N', max_length=2000)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('I', 'In-Progress'), ('O', 'Opened'), ('C', 'Closed'), ('D', 'Duplicate'), ('N', 'Not Resolved')], default='O', max_length=200)),
                ('show_ques', models.CharField(choices=[('PR', 'Private'), ('PU', 'Public')], default='PU', max_length=20)),
                ('priority', models.CharField(choices=[('L', 'Low'), ('M', 'Medium'), ('H', 'High'), ('U', 'Urgent')], default='L', max_length=20)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
    ]
