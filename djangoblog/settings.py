"""
Django settings for bikeysight project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from . import base as cfg
import logging
import json
# import django_heroku
from decouple import config
import dj_database_url
from django.contrib.messages import constants as messages
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# print(cfg)
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '_6u2@lp_ly3)ob_=tey*mc+j7hgl$-((1hkmddshw@%yc25#_5'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

if DEBUG:
    ALLOWED_HOSTS = ['*']
else:
    ALLOWED_HOSTS = ['.heroku.com', 'letlearntech', 'teckiy']


# Application definition


INSTALLED_APPS = [

    'django.contrib.admin',
    'django.contrib.auth',

    'django.contrib.sites',
    'django.contrib.sitemaps',

    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'channels',
    # 'django_hosts',

    'blogs.apps.BlogsConfig',
    # 'polls.apps.PollsConfig',
    'users.apps.UsersConfig',
    'crispy_forms',
    'rolepermissions',
    'django_celery_beat',
    'django_celery_results',
    'imagekit',
    'django_db_logger',
    'ckeditor',
    'ckeditor_uploader',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.github',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.google',
    'searches',
    'comments',
    'videos',
    'support',
    'projects',
    'analytics',
    'orders',
    'tecsee',

    'storages',
    'rest_framework',
    'markdownx',
    'markdown_deux',
    'meta',
    'notifications',
    'corsheaders',
    'django.contrib.humanize',
    'paypal.standard.ipn',
    'django_filters',
    'taggit',
     's3direct',
]

TAGGIT_CASE_INSENSITIVE = True

ASGI_APPLICATION = 'support.channels.application'


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',

    'corsheaders.middleware.CorsMiddleware',

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]
if DEBUG == False:
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    SECURE_SSL_REDIRECT = True


# SECURE_SSL_REDIRECT = False
AUTHENTICATION_BACKENDS = (

    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',

)

ROOT_URLCONF = 'djangoblog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), os.path.join(BASE_DIR, 'templates', 'allauth')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangoblog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'US/Pacific'
# TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'


MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


CKEDITOR_UPLOAD_PATH = "uploads/"

CKEDITOR_RESTRICT_BY_USER = True
CKEDITOR_CONFIGS = {
    # django-ckeditor defaults
    'default': {
        # Editor Width Adaptation
        'width': 'auto',
        'height': '250px',
        # tab key conversion space number
        'tabSpaces': 4,
        # Toolbar Style
        'toolbar': 'Custom',
        'tabSpaces': 0,
        'fillEmptyBlocks': False,

        # Add Code Block Plug-ins
        'extraPlugins': ','.join(['codesnippet', 'div', ]),
    },
    'awesome_ckeditor': {
        'width': 'auto',
        'height': 'auto',
        # 'toolbar': None,
        'tabindex': -1,
        'tabSpaces': 0,
        'fillEmptyBlocks': False,
        'toolbar': 'Custom', 'toolbar_Custom':
        [
            ['Bold', 'Image', 'CodeSnippet', 'Maximize', 'ShowBlocks', 'Form', 'Checkbox',
                'Radio', 'TextField', 'Textarea', 'Select', 'Button',
                'list', 'Table', 'indent', 'Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo', 'blocks', 'align', 'bidi', 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl', 'Link', 'Unlink', 'Anchor'],
            # {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},


        ],
        'extraPlugins': 'codesnippet',
    },
    'profile_ckeditor': {
        'width': 'auto',
        'height': '20%',
        'tabSpaces': 4,
        'fillEmptyBlocks': False,
        'toolbar': 'Custom', 'toolbar_Custom':
        [
            {'name': 'basicstyles',
             'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat']},
            {'name': 'paragraph',
             'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-',
                       'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl',
                       'Language']},
            {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},

        ],
        'extraPlugins': 'codesnippet',
    },
    'comment_ckeditor': {
        'width': 'auto',
        'height': '250px',
        'tabSpaces': 4,
        'fillEmptyBlocks': False,
        'toolbar': 'Custom', 'toolbar_Custom':
        [
            ['Bold', 'Image', 'CodeSnippet'],

        ],
        'extraPlugins': 'codesnippet',
    },
}

CRISPY_TEMPLATE_PACK = 'bootstrap4'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

LOGIN_REDIRECT_URL = '/'
LOGIN_URL = 'account_login'


ROLEPERMISSIONS_MODULE = cfg.setting_config['ROLEPERMISSIONS_MODULE']

SERVER_EMAIL = 'developerteckiy@gmail.com'
EMAIL_USE_TLS = True


#SENDGRID_API_KEY = config('SENDGRID_API_KEY')
SENDGRID_API_KEY = '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'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_HOST_USER = 'apikey'
EMAIL_HOST_PASSWORD = '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'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'developerteckiy@gmail.com'


PROJECT_TITLE = 'LetLearnTech'

if DEBUG:
    SITE_ID = 2
    SENDGRID_SANDBOX_MODE_IN_DEBUG = True
else:
    SITE_ID = 1

AWS_S3_CUSTOM_DOMAIN = 'django-s3-letslearntech.s3.us-west-2.amazonaws.com'
AWS_ACCESS_KEY_ID = 'AKIAVZOELBDUGZP7IKXN'
AWS_SECRET_ACCESS_KEY = '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'
AWS_STORAGE_BUCKET_NAME = 'django-s3-letslearntech'
AWS_UPLOAD_GROUP = "django_LetlearntechGroup"
AWS_S3_REGION_NAME = 'us-west-2'
AWS_CLOUDFRONT_URL = 'django-s3-letslearntech.s3.amazonaws.com'
AWS_ACL_POLICY = 'public-read'
# AWS_S3_CUSTOM_DOMAIN = config('AWS_S3_CUSTOM_DOMAIN')
# AWS_ACCESS_KEY_ID = config('AWS_ACCESS_KEY_ID')
# AWS_SECRET_ACCESS_KEY = config('AWS_SECRET_ACCESS_KEY')
# AWS_STORAGE_BUCKET_NAME = config('AWS_STORAGE_BUCKET_NAME')
# AWS_UPLOAD_GROUP = config('AWS_UPLOAD_GROUP')
# AWS_S3_FILE_OVERWRITE = False
# AWS_DEFAULT_ACL = 'public-read'
# AWS_S3_REGION_NAME = config('AWS_S3_REGION_NAME')  # change to your region
# AWS_S3_SIGNATURE_VERSION = 's3v4'
# S3_BUCKET_NAME = AWS_STORAGE_BUCKET_NAME
# This is for ckeditor file expire issue
AWS_QUERYSTRING_AUTH = False
# AWS_S3_ENDPOINT_URL = config('AWS_CLOUDFRONT_URL')
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
# AWS_S3_OBJECT_PARAMETERS = {
#     'Expires': 'Thu, 31 Dec 2099 20:00:00 GMT',
#     'CacheControl': 'max-age=94608000',
# }
# Activate Django-Heroku.
# django_heroku.settings(locals())

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = True
ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 86400
ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = True
SOCIALACCOUNT_QUERY_EMAIL = True


# BROKER_URL = config('REDIS_URL')
# CELERY_RESULT_BACKEND = config('REDIS_URL')
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

# ADMIN_EMAIL = config('ADMIN_EMAIL')
IPSLACK_KEY = 'f77573a987fa5cf9e5fd715f011d3b8c'

# Markdown extensions
MARKDOWNX_MARKDOWN_EXTENSIONS = [
    'markdown.extensions.sane_lists',
    'markdown.extensions.nl2br',
    'markdown.extensions.extra',
]
# celery heroku worker setup
# https://devcenter.heroku.com/articles/celery-heroku
if not DEBUG:
    DEBUG_PROPAGATE_EXCEPTIONS = True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': ('%(asctime)s [%(process)d] [%(levelname)s] ' +
                       'pathname=%(pathname)s lineno=%(lineno)s ' +
                       'funcname=%(funcName)s %(message)s'),
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        }
    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        }
    },
    'loggers': {
        'testlogger': {
            'handlers': ['console'],
            'level': 'INFO',
        }
    }
}

META_SITE_PROTOCOL = 'http'
META_USE_TITLE_TAG = True
META_SITE_NAME = "Teckiy"
META_SITE_DOMAIN = 'teckiy.com'
META_USE_OG_PROPERTIES = True
META_USE_FACEBOOK_PROPERTIES = True
META_FB_PAGES = True
# FB Secure URL image use
META_OG_SECURE_URL_ITEMS = []
# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'rest_framework.authentication.TokenAuthentication',
#         'rest_framework.authentication.SessionAuthentication',
#     ],
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated',
#     ]
# }

# This is for Danger Message alert
MESSAGE_TAGS = {
    messages.ERROR: 'danger',
}


CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = [
    "https://www.teckiy.com",
    "https://teckiy.com",
    "http://localhost:8081",
    "http://localhost:8080",
    "http://127.0.0.1:8010"
]
PAYPAL_TEST = True
PAYPAL_PREFIX = 'a6gms9rm6qxj(fopvn9g*3_nv$f_b&uif02$)!#c$ku!nfh4_%'
PAYPAL_ACCOUNT = 'learnbiz@gmail.com'
PAYPAL_CLIENT_ID = 'AVwl0kXO434vyYVbuPnmOIQXhQMUeJ-DeDMWm_dS_OxRRGma4Y5Do8m08JcfVUmRD23maI1DnsT_rtG5'
PAYPAL_SECRET = 'EMIPrm_rSu2HcFrzYfhd72-VXwKHxxISerXlc6QOri8XDq7g_0U_VYHzWBWgoIEnkK_5_Ybx9WZuaMJC'

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [os.environ.get('REDIS_URL', ("127.0.0.1", 6379))],
        },

    },
}
